services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: ${APP_ENV}
    container_name: go-app
    ports:
      - "${PORT}:8080"
    depends_on:
      - db
      - redis
    environment:
      - PORT=${PORT}
      - APP_ENV=${APP_ENV}
      - DB_DSN=host=${DB_HOST} user=${DB_USER} password=${DB_PASSWORD} dbname=${DB_NAME} port=${DB_PORT} sslmode=${SSL_MODE}
      - REFRESH_TOKEN_SECRET=${REFRESH_TOKEN_SECRET}
      - ACCESS_TOKEN_SECRET=${ACCESS_TOKEN_SECRET}
      - OPENAI_KEY=${OPENAI_KEY}
      - AWS_REGION=${AWS_REGION}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - BUCKET_NAME=${BUCKET_NAME}
      - EMAIL_SENDER=${EMAIL_SENDER}
      - EMAIL_APP_PASSWORD=${EMAIL_APP_PASSWORD}
      - REDIS_HOST=${REDIS_HOST}
  
  db:
    image: postgres:16
    container_name: db
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_HOST_AUTH_METHOD: md5
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
  
  redis:
    image: redis:alpine
    container_name: redis-server
    ports:
      - "6379:6379"

  # nginx:
  #   image: nginx:latest
  #   container_name: nginx
  #   ports:
  #     - "443:443"
  #     - "80:80"
  #   depends_on:
  #     - app
  #   volumes:
  #     - ./nginx.conf:/etc/nginx/nginx.conf
  #     - /etc/letsencrypt:/etc/letsencrypt
  #     - /var/www/certbot:/var/www/certbot
  #   networks:
  #     - app_network

volumes:
  pgdata:

networks:
  app_network:
    driver: bridge
